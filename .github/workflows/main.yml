name: Sync, Build & Deploy MK4

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'    # 02:00 UTC / 04:00 Berlin

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.compare.outputs.changed }}
    steps:
      - name: Checkout fork's master
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Set up Git user identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"


      - name: Add upstream remote & fetch
        run: |
          git remote add upstream https://github.com/prusa3d/Prusa-Firmware-Buddy.git
          git fetch upstream master

      - name: Check for upstream changes
        id: compare
        run: |
          COUNT=$(git rev-list HEAD..upstream/master --count)
          if [ "$COUNT" -gt 0 ]; then
            echo "found $COUNT upstream commits"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "no new upstream commits"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  sync-build:
    needs: check-upstream
    if: needs.check-upstream.outputs.changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout & sync
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Set up Git user identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Merge upstream/master
        run: |
          git remote add upstream https://github.com/prusa3d/Prusa-Firmware-Buddy.git
          git fetch upstream master
          git merge upstream/master --no-edit
          git push origin master

      - name: Install ARM toolchain & build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-none-eabi \
            make \
            binutils-arm-none-eabi \
            libnewlib-arm-none-eabi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          docker system prune -af

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt

      - name: Build MK4 (release)
        env:
          BUDDY_NO_VIRTUALENV: '1'
        run: python utils/build.py --preset mk4 --build-type release

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: PrusaBuddy-MK4-release
          path: build/products/**

      - name: Create annotated tag
        id: tag_step
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          SHORT="${GITHUB_SHA::7}"
          TAG="v-${SHORT}"
          git tag -a "$TAG" -m "Automated release for ${GITHUB_SHA}"
          git push origin "$TAG"
          echo "short_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_step.outputs.short_tag }}
          name: "Firmware build #${{ github.run_number }}"
          body: |
            ⚙️ Automated build of Prusa MK4 firmware with unwanted moves removed. (Untested)  
            • Commit: `${{ github.sha }}`  
            • Run #: `${{ github.run_number }}`

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/products/mk4_release_boot.bbf
          asset_name: mk4_release_boot.bbf
          asset_content_type: application/octet-stream
