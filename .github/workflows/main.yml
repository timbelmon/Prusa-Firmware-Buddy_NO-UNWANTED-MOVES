name: Sync, Build & Deploy MK4

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'    # 02:00 UTC / 04:00 Berlin

jobs:
  sync-build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout & sync
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Add & fetch upstream
        run: |
          git remote add upstream https://github.com/prusa3d/Prusa-Firmware-Buddy.git
          git fetch upstream

      - name: Merge upstream/master
        run: |
          git checkout master
          git merge upstream/master --no-edit

      - name: Push merge back
        run: git push origin master

      # 2. System toolchain
      - name: Install ARM toolchain & build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-none-eabi \
            make \
            binutils-arm-none-eabi \
            libnewlib-arm-none-eabi

      # 3. Python + deps
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt

      # 4. Build without switching into .venv
      - name: Build MK4 (release)
        env:
          BUDDY_NO_VIRTUALENV: '1'
        run: python utils/build.py --preset mk4 --build-type release

      # 5. Store the raw artifact (optional, for debugging)
      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: PrusaBuddy-MK4-release
          path: build/products/**

      # 6. Create and push a short‐SHA tag
      - name: Create annotated tag
        id: tag_step
        run: |
          SHORT="${GITHUB_SHA::7}"
          TAG="v-${SHORT}"
          git tag -a "$TAG" -m "Automated release for ${GITHUB_SHA}"
          git push origin "$TAG"
          echo "short_tag=${TAG}" >> $GITHUB_OUTPUT

      # 7. Publish the GitHub Release on that same tag
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_step.outputs.short_tag }}
          name:    "Firmware build #${{ github.run_number }}"
          body:    |
            ⚙️ Automated build of Prusa MK4 firmware with unwanted moves removed. (Untested)  
            • Commit: `${{ github.sha }}`  
            • Run #: `${{ github.run_number }}`

      # 8. Attach the firmware `.bbf` to the release
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/products/**/*.bbf
          asset_name: PrusaBuddy-MK4-${{ github.sha }}.bbf
          asset_content_type: application/octet-stream
