name: Manual Build & Release MK4

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install native ARM toolchain & build tools
      - name: Install ARM toolchain & build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-none-eabi \
            make \
            binutils-arm-none-eabi \
            libnewlib-arm-none-eabi

      # 3. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 4. Install Python dependencies
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt

      # 5. Build MK4 (release)
      - name: Build MK4 (release)
        env:
          BUDDY_NO_VIRTUALENV: '1'
        run: python utils/build.py --preset mk4 --build-type release

      # 6. Create & push a short-SHA tag
      - name: Create annotated tag
        id: tag_step
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          SHORT="${GITHUB_SHA::7}"
          TAG="v-${SHORT}"
          git tag -a "$TAG" -m "Manual release for ${GITHUB_SHA}"
          git push origin "$TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      # 7. Create a GitHub Release for that tag
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_step.outputs.tag }}
          name:    "Manual firmware build #${{ github.run_number }}"
          body:    |
            ⚙️ Automated build of Prusa MK4 firmware  
            • Commit: `${{ github.sha }}`  
            • Run #: `${{ github.run_number }}`

      # 8. Upload the firmware .bbf to the Release
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/products/mk4_release_boot.bbf
          asset_name: mk4_release_boot.bbf
          asset_content_type: application/octet-stream
